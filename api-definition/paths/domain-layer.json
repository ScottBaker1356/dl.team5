{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "domain-layer",
    "description": "This is the domain layer for Team 5."
  },
  "schemes": ["https"],
  "paths": {
    "/send-text-message": {"post": {
      "description": "Sends a text message",
      "consumes": ["application/json"],
      "parameters": [{
        "name": "body",
        "required": true,
        "in": "body",
        "schema": {
          "type": "object",
          "required": [
            "phoneNumbers",
            "message"
          ],
          "properties": {
            "phoneNumbers": {
              "type": "array",
              "items": {"type": "string"}
            },
            "message": {"type": "string"}
          }
        }
      }],
      "responses": {
        "200": {"description": "OK"},
        "400": {"description": "Bad Request"},
        "500": {"description": "Internal Server Error"}
      }
    }},
    "/notify-of-event": {"post": {
      "summary": "Sensor listener notifies service layer that an event occurred",
      "consumes": ["application/json"],
      "parameters": [{
        "name": "body",
        "required": true,
        "in": "body",
        "schema": {
          "type": "object",
          "required": ["sensorId","eventTypeCode","measuredValue"],
          "properties": {
            "sensorId": {
              "type": "string",
              "description": "The unique identifier of the sensor which detected the event"
            },
            "eventTypeCode": {
              "type": "string",
              "description": "A code specifying the type of event that occurred",
              "enum": [
                "WaterPresentNotification",
                "TemperatureUpdateNotification"
              ]
            },
            "measuredValue": {
              "type": "number",
              "description": "A numberic value given context by the eventTypeCode. For instance, in the event of a WaterPresentNotification, this field will hold the value 1 if water is detected by the sensor identified by sensorId, and 0 if it is not. Likewise, in the event of a TemperatureUpdateNotification, this field holds the temperature observed by the sensor."
            }
          }
        }
      }],
      "responses": {
        "200": {"description": "OK"},
        "400": {"description": "Bad Request"},
        "500": {"description": "Internal Server Error"}
      }
    }}
  }
}